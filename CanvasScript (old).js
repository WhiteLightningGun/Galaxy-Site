//CANVAS SECTION

var canvas = document.getElementById("myCanvas");
var CTX = canvas.getContext("2d");

var CENTRE_X = canvas.width / 2;
var CENTRE_Y = canvas.height / 2;

function resizeCanvas() {
    canvas.width = 300;
    canvas.height = 300;
    CENTRE_X = canvas.width / 2;
    CENTRE_Y = canvas.height / 2;

    // Redraw everything after resizing the window
    // Order matters, start with the furthest objects and progress to the "nearest"
    background();
    centralStar(10);
    offset();
  }


// Create gradient
function background() {
    var grd = CTX.createRadialGradient(CENTRE_X,CENTRE_Y,0.20*CENTRE_X,CENTRE_X,CENTRE_Y,1*CENTRE_X)
    grd.addColorStop(1, "black");
    grd.addColorStop(0, "#000040"); //A very dark blue

    // Fill with gradient
    CTX.fillStyle = grd;
    CTX.fillRect(0, 0, 600, 600);
}

background();

//create central star function

function centralStar(r) {
    CTX.beginPath();
    CTX.arc(CENTRE_X, CENTRE_Y, r, 0, 2 * Math.PI, false);
    CTX.fillStyle = "white";
    CTX.fill();
}

centralStar(10);

//create offset star
function offset() {
    //var ctx = c.getContext("2d");

    CTX.beginPath();
    CTX.arc(CENTRE_X+15, CENTRE_Y+100, 1, 0, 2 * Math.PI, false);
    CTX.fillStyle = "yellow";
    CTX.fill();

}
offset();


function star(x, y, fill) {
    // will take coordinates generated by another function to create the data to 
    // draw a 1x1 rectangle at a certain coordinate

    this.x = x;
    this.y = y;
    this.w = 1;
    this.h = 1;
    this.fill = fill;
}

function probabilityField() {
    // Use a normal distribution to distribute coordinates for a star pixel
    // based on proximity to the coordinate centre of the canvas
    // This must iterate through all 90000 coordinates on the 300x300 canvas

    // function: f(r) = (P)*e^-(((r-displacement)^2)/spread)

    // r is for radius, which will be calculated in the usual way: sqrt(x^2 + y^2)
    // displacement centres the distribution on a certain coordinate relative to r
    // spread defines how far it will spread out from the central
    // P is a normalisation factor defining the maximum possible probability, semantically 
    // this should not exceed 1 for obvious reasons 
    // P, displacement, spread variables will be tunable by the user via a slider control on the HTML

}

var starField = [];

starField.push(new star(150, 15, "white"));

// get canvas element.
var elem = document.getElementById('myCanvas');

// check if context exist and draw
if (elem.getContext) {

    CTX = elem.getContext('2d');

    for (var i in starField) {
        oRec = starField[i];
        CTX.fillStyle = oRec.fill;
        CTX.fillRect(oRec.x, oRec.y, oRec.w, oRec.h);
    }
}